[{"C:\\Orbital\\orbit\\rwfb\\src\\index.js":"1","C:\\Orbital\\orbit\\rwfb\\src\\App.js":"2","C:\\Orbital\\orbit\\rwfb\\src\\LoginContext.js":"3","C:\\Orbital\\orbit\\rwfb\\src\\components\\Home.js":"4","C:\\Orbital\\orbit\\rwfb\\src\\components\\book_form.js":"5","C:\\Orbital\\orbit\\rwfb\\src\\components\\Signup.js":"6","C:\\Orbital\\orbit\\rwfb\\src\\components\\Signin.js":"7","C:\\Orbital\\orbit\\rwfb\\src\\components\\404.js":"8","C:\\Orbital\\orbit\\rwfb\\src\\config\\firebase.js":"9","C:\\Orbital\\orbit\\rwfb\\src\\config\\booking_display.js":"10","C:\\Orbital\\orbit\\rwfb\\src\\config\\styles.js":"11","C:\\Orbital\\orbit\\rwfb\\src\\config\\navbar.js":"12","C:\\Orbital\\orbit\\rwfb\\src\\components\\Book\\book_form.js":"13","C:\\Orbital\\orbit\\rwfb\\src\\components\\Book\\book_dropdown.js":"14","C:\\Orbital\\orbit\\rwfb\\src\\components\\Book\\book_calendar.js":"15","C:\\Orbital\\orbit\\rwfb\\src\\components\\Approve.js":"16","C:\\Orbital\\orbit\\rwfb\\src\\components\\Staff.js":"17","C:\\Orbital\\orbit\\rwfb\\src\\components\\forgot_password.js":"18","C:\\Orbital\\orbit\\rwfb\\src\\components\\Book\\succform.js":"19"},{"size":344,"mtime":1685453843586,"results":"20","hashOfConfig":"21"},{"size":1304,"mtime":1687073401217,"results":"22","hashOfConfig":"21"},{"size":4605,"mtime":1687073401218,"results":"23","hashOfConfig":"21"},{"size":963,"mtime":1687073401221,"results":"24","hashOfConfig":"21"},{"size":4588,"mtime":1685938414030,"results":"25","hashOfConfig":"21"},{"size":3065,"mtime":1687073401222,"results":"26","hashOfConfig":"21"},{"size":4718,"mtime":1687073401222,"results":"27","hashOfConfig":"21"},{"size":1518,"mtime":1685938414028,"results":"28","hashOfConfig":"21"},{"size":1112,"mtime":1686581759291,"results":"29","hashOfConfig":"21"},{"size":9402,"mtime":1687074318611,"results":"30","hashOfConfig":"21"},{"size":594,"mtime":1686581759291,"results":"31","hashOfConfig":"21"},{"size":4576,"mtime":1687074673961,"results":"32","hashOfConfig":"21"},{"size":13482,"mtime":1687073401220,"results":"33","hashOfConfig":"21"},{"size":7533,"mtime":1687073401220,"results":"34","hashOfConfig":"21"},{"size":5593,"mtime":1687073401219,"results":"35","hashOfConfig":"21"},{"size":8287,"mtime":1687073401219,"results":"36","hashOfConfig":"21"},{"size":7196,"mtime":1687073401222,"results":"37","hashOfConfig":"21"},{"size":873,"mtime":1687073401223,"results":"38","hashOfConfig":"21"},{"size":991,"mtime":1687073401221,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1szfdz0",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Orbital\\orbit\\rwfb\\src\\index.js",[],[],"C:\\Orbital\\orbit\\rwfb\\src\\App.js",["108"],[],"import './App.css';\r\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\n\r\nimport Signin from \"./components/Signin\";\r\nimport Signup from \"./components/Signup\";\r\nimport Home from \"./components/Home\";\r\nimport Approve from \"./components/Approve\";\r\nimport BookForm from \"./components/Book/book_form\";\r\nimport UserStatusEditor from './components/Staff';\r\nimport BookDropdown from \"./components/Book/book_dropdown\";\r\nimport BookCalendar from \"./components/Book/book_calendar\";\r\nimport { LoginContextProvider } from './LoginContext';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">    \r\n      <LoginContextProvider>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Signin/>} />\r\n        <Route path=\"/signup\" element={<Signup/>} />\r\n        <Route path=\"/Home\" element={<Home/>} />\r\n        <Route path=\"/book_form\" element={<BookForm/>} />\r\n        <Route path=\"/book_calendar\" element={<BookCalendar/>} />\r\n        <Route path=\"/book_dropdown\" element={<BookDropdown/>} />\r\n        <Route path=\"/approve\" element={<Approve/>} />\r\n        <Route path=\"/staff\" element={<UserStatusEditor/>} />\r\n        <Route path=\"*\" element={<h1>You have entered a wrong url</h1>} />\r\n      </Routes>\r\n      </LoginContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","C:\\Orbital\\orbit\\rwfb\\src\\LoginContext.js",["109"],[],"import { createContext, useContext, useEffect, useState, useReducer } from 'react';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword,\r\nsignOut, onAuthStateChanged, sendPasswordResetEmail } from \"firebase/auth\";\r\nimport { auth } from \"./config/firebase\";\r\n\r\nconst UserContext = createContext(null);\r\n\r\n// creating useContext Hook\r\nexport const LoginContextProvider = ({children}) => {\r\n\r\n    /* create dummy objects for testing before database integration */\r\n    // Location & Facility objects\r\n    const locations = [\r\n        {\r\n            Name: \"CAPT\"\r\n        },\r\n        {\r\n            Name: \"YALE\"\r\n        },\r\n        {\r\n            Name: \"TEMBU\"\r\n        }\r\n    ];\r\n\r\n    const facilities = [\r\n        { Name:\"SR1\" , Capacity:20, facilityId:1, locationName: \"CAPT\"},\r\n        { Name:\"SR2\" , Capacity:20, facilityId:2, locationName: \"CAPT\" },\r\n\r\n        { Name:\"SR3\" , Capacity:20, facilityId:3, locationName: \"YALE\"},\r\n        { Name:\"SR4\" , Capacity:20, facilityId:4, locationName: \"YALE\" },\r\n\r\n        { Name:\"MPSH\" , Capacity:30, facilityId:5, locationName: \"TEMBU\"},\r\n        { Name:\"SR5\" , Capacity:20,  facilityId:6, locationName: \"TEMBU\" },\r\n    ];\r\n\r\n    // User object\r\n    const [students,setStudents] = useState(\r\n        [\r\n            { studentId: 1, Name: \"ramanen\", tier:\"Admin\"} ,\r\n            { studentId: 2, Name: \"ramanenb\", tier:\"Staff\"},\r\n            { studentId: 3, Name: \"jeron\", tier:\"Student\"}\r\n        ]\r\n    )\r\n\r\n    // Booking Object\r\n    const [Bookings, setBookings] = useState(\r\n    [\r\n        {\r\n            id:1, date:  '2023-06-17', startTime: '10:00:00', endTime: '11:00:00',\r\n            status: \"approved\", bookingTitle: \"Milestone 2\", facilityId:6, studentId: 1\r\n        },\r\n        {\r\n            id:2, date:  '2023-06-17', startTime: '11:00:00', endTime: '12:00:00',\r\n            status: \"pending\", bookingTitle: \"Milestone 1-1\", facilityId:6, studentId: 1\r\n        },\r\n        {\r\n            id:3, date:  '2023-06-16', startTime: '10:00:00', endTime: '11:00:00',\r\n            status: \"pending\", bookingTitle: \"Milestone 1-2\", facilityId:6, studentId: 1\r\n        },\r\n        {\r\n            id:4, date:  '2023-06-16', startTime: '11:00:00', endTime: '12:00:00',\r\n            status: \"pending\", bookingTitle: \"Milestone 1-4\", facilityId:1, studentId: 1\r\n        },\r\n        {\r\n            id:5, date:  '2023-06-15', startTime: '10:00:00', endTime: '11:00:00',\r\n            status: \"pending\", bookingTitle: \"Milestone 1-3\", facilityId:3, studentId: 1\r\n        }\r\n    ]);\r\n\r\n\r\n    // drop-down booking location & facility setters\r\n    const [setLocation, setSelectedLocation] = useState(\"\");\r\n    const [setFacility, setSelectedFacility] = useState(\"\");\r\n\r\n    /* FIREBASE FUNCTIONS & USER */\r\n    // user object \r\n    const [user, setUser] = useState({});\r\n\r\n    const createUser = (email, password) => {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // login firebase function\r\n    const login = (email, password) =>  {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    // logout firebase function\r\n    const logout = () => {\r\n        return signOut(auth);\r\n    }\r\n\r\n    // updating user object when there is a state change to User \r\n    useEffect(() => {\r\n        const subscribe = onAuthStateChanged(auth, (currentUser) => {\r\n          setUser(currentUser);\r\n        });\r\n        return () => {\r\n          subscribe();\r\n        };\r\n    }, []);\r\n\r\n    // reset password when forgot password or just to reset\r\n    const resetPassword = (email) => {\r\n        return sendPasswordResetEmail(auth,email);\r\n    }\r\n\r\n    // make the props passed to all children neater \r\n    const loginContextValue = {\r\n        // user & login page functions\r\n        user, createUser, login, logout, resetPassword,\r\n        // data \r\n        locations, facilities, Bookings, setBookings,\r\n        // drop-down booking setters\r\n        setLocation, setSelectedLocation, setFacility, setSelectedFacility,\r\n        // User object - aka staff/student/admin\r\n        students, setStudents,\r\n        extractNameFromEmail\r\n    };\r\n\r\n    // remove the @... from the email \r\n    function extractNameFromEmail(email) {\r\n        return email.split('@')[0];\r\n    }\r\n\r\n    return (\r\n        // pass down User object and signup,loginmlogout function as props\r\n        <UserContext.Provider value={loginContextValue}>\r\n            { children }\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\n// exporting the context out \r\nexport const UserAuthentication = () => {\r\n    return useContext(UserContext);\r\n}","C:\\Orbital\\orbit\\rwfb\\src\\components\\Home.js",["110"],[],"import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { UserAuthentication } from '../LoginContext';\r\nimport Navbar from \"../config/navbar\";\r\nimport {ListDisplay, CalenderDisplay} from \"../config/booking_display\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst Home = () => {\r\n\r\n  const { user } = UserAuthentication();\r\n\r\n  // remove the @... from the email \r\n  function extractNameFromEmail(email) {\r\n    return email.split('@')[0];\r\n  }\r\n  let name = \"temp\"\r\n  try {\r\n      console.log(user?.email);\r\n      name = extractNameFromEmail(user?.email);\r\n  } catch {\r\n      console.log(\"failed extraction of name f\")\r\n  }\r\n\r\n  return (\r\n    <div className='w-full h-[1200px] bg-center bg-cover bg-utown'>\r\n    <div className='max-w-[800px] mx-auto my-16 p-4'>\r\n      <Navbar name={name} current={\"Home\"}/>\r\n      <ListDisplay name={name}/> \r\n      <CalenderDisplay/>     \r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n","C:\\Orbital\\orbit\\rwfb\\src\\components\\book_form.js",[],[],"C:\\Orbital\\orbit\\rwfb\\src\\components\\Signup.js",[],[],"C:\\Orbital\\orbit\\rwfb\\src\\components\\Signin.js",[],[],"C:\\Orbital\\orbit\\rwfb\\src\\components\\404.js",["111","112"],[],"import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function WrongUrl() {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div class=\"lg:px-24 lg:py-24 md:py-20 md:px-44 px-4 py-24 items-center flex justify-center flex-col-reverse lg:flex-row md:gap-28 gap-16\">\r\n            <div class=\"xl:pt-24 w-full xl:w-1/2 relative pb-12 lg:pb-0\">\r\n                <div class=\"relative\">\r\n                    <div class=\"absolute\">\r\n                        <div class=\"\">\r\n                            <h1 class=\"my-2 text-gray-800 font-bold text-2xl\">\r\n                                Looks like you entered an invalud url. \r\n                            </h1>\r\n                            <p class=\"my-2 text-gray-800\">Sorry about that! Please visit our hompage to the NuNme Bookies Website.</p>\r\n                            <button onClick={() => navigate('/')}\r\n                            class=\"sm:w-full lg:w-auto my-2 border rounded md py-4 px-8 text-center bg-indigo-600 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-700 focus:ring-opacity-50\">Take me there!</button>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <img src=\"https://i.ibb.co/G9DC8S0/404-2.png\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <img src=\"https://i.ibb.co/ck1SGFJ/Group.png\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Orbital\\orbit\\rwfb\\src\\config\\firebase.js",[],[],"C:\\Orbital\\orbit\\rwfb\\src\\config\\booking_display.js",["113","114","115","116","117","118","119","120","121","122","123"],[],"import { useState, useEffect, useReducer } from 'react';\r\n\r\nimport { UserAuthentication } from '../LoginContext';\r\n\r\nimport 'react-calendar/dist/Calendar.css'\r\nimport Calendar from 'react-calendar'\r\nimport './calenderStyle.css';\r\n\r\nexport function ListDisplay(props) {\r\n\r\n    const name = props.name; \r\n    \r\n    // handling user navigation\r\n    const { Bookings, setBookings } = UserAuthentication();\r\n\r\n\r\n    // handling display of data from backend\r\n    const [datas, setDatas] = useState([]);\r\n    const [bdatas, setbDatas] = useState([]);\r\n\r\n    // filter datas by users - show user booking\r\n    function filterByUser(data) {\r\n        return data?.studentId === 1;\r\n    }\r\n\r\n    // gets booking data from django and sets state for booking data\r\n    /*\r\n    useEffect(() => {\r\n        fetch('api/display', {\r\n        'method' : 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(resp => resp.json())\r\n    .then(resp => setDatas(resp))\r\n    .catch(error => console.log(error))\r\n    }, [])\r\n    */\r\n    \r\n\r\n    useEffect(() => {\r\n        fetch('api/bookings', {\r\n        'method' : 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(resp => resp.json())\r\n    .then(resp => setbDatas(resp))\r\n    .then(resp => console.log(bdatas))\r\n    .catch(error => console.log(error))\r\n\r\n    }, [])\r\n\r\n    return(      \r\n\r\n        <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\r\n        <table class=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n\r\n            <caption class=\"p-5 text-lg font-semibold text-left text-gray-900 bg-white dark:text-white dark:bg-gray-800\">\r\n                {name}'s Bookings\r\n                <p class=\"mt-1 text-sm font-normal text-gray-500 dark:text-gray-400\">Browse a list display of your bookings and edit if needed</p>\r\n            </caption>\r\n\r\n            <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    date\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    Title\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    facilityId\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    status\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                        <span class=\"sr-only\">Edit</span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {\r\n                    //.filter(data => filterByUser(data))?\r\n                    bdatas?.map(data => {\r\n                    return (\r\n                    <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n\r\n                        <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                            {data?.Name}\r\n                        </th>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                            {data?.Location}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                            {data?.TotalPax}\r\n                        </td>\r\n\r\n                        {/* <td class=\"px-6 py-4\">\r\n                        {data?.status == \"pending\" && <span class=\"inline-flex items-center bg-red-100 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-red-900 dark:text-red-300\">\r\n                            <span class=\"w-2 h-2 mr-1 bg-red-500 rounded-full\"></span>\r\n                            {data?.status}\r\n                        </span>}\r\n                        {data?.status == \"approved\" && <span class=\"inline-flex items-center bg-green-100 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-green-900 dark:text-green-300\">\r\n                            <span class=\"w-2 h-2 mr-1 bg-green-500 rounded-full\"></span>\r\n                            {data?.status}\r\n                        </span>}\r\n                        </td> */}\r\n\r\n                        <td class=\"px-6 py-4 text-right\">\r\n                            <a href=\"/Book\" class=\"font-medium text-blue-600 dark:text-blue-500 hover:underline hover:text-blue-300\">Edit</a>\r\n                        </td>\r\n                    </tr>\r\n                    )\r\n                })\r\n                }\r\n                \r\n            </tbody>\r\n\r\n        </table>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport function CalenderDisplay() {\r\n    const [date, setDate] = useState(new Date())\r\n\r\n    // handling user navigation\r\n    const { user, Bookings } = UserAuthentication();\r\n\r\n    return (\r\n        <div class=\"relative my-10 overflow-x-auto shadow-md sm:rounded-lg\">\r\n\r\n          <div>\r\n            <Calendar onChange={setDate} value={date}/>\r\n          </div>\r\n\r\n          <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg text-center font-semibold bg-gray-800 text-white\">\r\n             Selected date: {date.toDateString()}\r\n          </div>\r\n\r\n          <div class=\"mx-auto my-5\">\r\n            <SpecificDisplay date={date}/>\r\n          </div>\r\n          \r\n        </div>\r\n         )\r\n} \r\n\r\nexport function SpecificDisplay(props) {\r\n    \r\n    const date = props.date.toDateString().substring(3);\r\n\r\n\r\n    // filter datas by users - show user booking\r\n    function filterByUser(data) {\r\n        return data?.studentId === 1;\r\n    }\r\n\r\n    // filter datas by selected Date - show bookings only for the selected date\r\n    function filterByDate(data) {\r\n        // checks the respective day,month & year\r\n        return (\r\n            props.date.getDate() === new Date(data.date).getDate() &&\r\n            props.date.getMonth() === new Date(data.date).getMonth() &&\r\n            props.date.getFullYear() === new Date(data.date).getFullYear() \r\n        );\r\n    }\r\n\r\n    // handling user navigation\r\n    const { Bookings } = UserAuthentication();\r\n\r\n    return (\r\n        <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\r\n        <table class=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n\r\n            <caption class=\"p-5 text-lg font-semibold text-left text-gray-900 bg-white dark:text-white dark:bg-gray-800\">\r\n                {date}'s Bookings\r\n                <p class=\"mt-1 text-sm font-normal text-gray-500 dark:text-gray-400\">Browse a list display of the bookings for the selected Date</p>\r\n            </caption>\r\n\r\n            <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    date\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    Title\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    facilityId\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    status\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                        <span class=\"sr-only\">Edit</span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {\r\n                    Bookings\r\n                    ?.filter(data => filterByUser(data))\r\n                    ?.filter(data => filterByDate(data))\r\n                    ?.map(data => {\r\n                    return (\r\n                    <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n\r\n                        <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                            {data?.date}\r\n                        </th>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                            {data?.bookingTitle}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                            {data?.facilityId}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                        {data?.status == \"pending\" && <span class=\"inline-flex items-center bg-red-100 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-red-900 dark:text-red-300\">\r\n                            <span class=\"w-2 h-2 mr-1 bg-red-500 rounded-full\"></span>\r\n                            {data?.status}\r\n                        </span>}\r\n                        {data?.status == \"approved\" && <span class=\"inline-flex items-center bg-green-100 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-green-900 dark:text-green-300\">\r\n                            <span class=\"w-2 h-2 mr-1 bg-green-500 rounded-full\"></span>\r\n                            {data?.status}\r\n                        </span>}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4 text-right\">\r\n                            <a href=\"/Book\" class=\"font-medium text-blue-600 dark:text-blue-500 hover:underline hover:text-blue-300\">Edit</a>\r\n                        </td>\r\n                    </tr>\r\n                    )\r\n                })\r\n                }\r\n                \r\n            </tbody>\r\n\r\n        </table>\r\n        </div>\r\n         )\r\n} ","C:\\Orbital\\orbit\\rwfb\\src\\config\\styles.js",[],[],"C:\\Orbital\\orbit\\rwfb\\src\\config\\navbar.js",["124","125"],[],"import { useNavigate } from 'react-router-dom';\r\n\r\nimport { auth } from \"../config/firebase\";\r\nimport { UserAuthentication } from '../LoginContext';\r\n\r\nexport default function Navbar(props) {\r\n\r\n    // handling user navigation\r\n    const { logout, students, user } = UserAuthentication();\r\n    const navigate = useNavigate();\r\n\r\n    // remove the @... from the email -> gives the name\r\n    const name = props.name;\r\n\r\n    // check if you are in the current page or not\r\n    const currentPage = \"block py-2 pl-3 pr-4 text-white bg-red-700 rounded md:bg-transparent md:text-red-700 md:p-0 md:dark:text-red-500\";\r\n    const otherPage = \"block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-red-700 md:p-0 md:dark:hover:text-red-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700\";\r\n\r\n    function checkCurrentPage(thisButton) {\r\n        if (String(props.current) === thisButton) {\r\n            return currentPage;\r\n        } else {\r\n            return otherPage;\r\n        }\r\n    };\r\n\r\n    // check if current user is an Admin, if so set bool to true\r\n    let checker = \"Student\";\r\n\r\n    try {\r\n        students.map( student => {\r\n            // get the current user\r\n            if(String(student.Name) === name) {\r\n                // check if current user is an Admin or not\r\n                if(String(student.tier) === \"Admin\") {\r\n                    checker = \"Admin\";\r\n                } else if(String(student.tier) === \"Staff\") {\r\n                    checker = \"Staff\";\r\n                }\r\n            }\r\n        })\r\n    } catch {\r\n        console.log(\"oops cannot check admin or not\");\r\n    }\r\n\r\n    // handle logout\r\n    const handleLogout = async (e) => {\r\n        try {\r\n            e.preventDefault();  \r\n            await logout(auth);\r\n            navigate('/');\r\n        } catch (e) {\r\n            alert(\"hey logout issue\");\r\n        }\r\n      }; \r\n\r\n    return (  \r\n        <div> \r\n        <nav class=\"bg-white dark:bg-gray-900 fixed w-full z-20 top-0 left-0 border-b border-gray-200 dark:border-gray-600\">\r\n        <div class=\"max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4\">\r\n\r\n        <span class=\"self-center text-2xl font-semibold whitespace-nowrap dark:text-white\">NuNme.</span>\r\n        \r\n        <div class=\"flex md:order-2\">\r\n            <button type=\"button\" onClick={handleLogout} class=\"text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-4 py-2 text-center mr-3 md:mr-0 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\">Logout</button>\r\n\r\n            <button data-collapse-toggle=\"navbar-sticky\" type=\"button\" class=\"inline-flex items-center p-2 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600\" aria-controls=\"navbar-sticky\" aria-expanded=\"false\">\r\n                <span class=\"sr-only\">Open main menu</span>\r\n                <svg class=\"w-6 h-6\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\"></path></svg>\r\n            </button>\r\n        </div>\r\n        <div class=\"items-center justify-between hidden w-full md:flex md:w-auto md:order-1\" id=\"navbar-sticky\">\r\n            <ul class=\"flex flex-col p-4 md:p-0 mt-4 font-medium border border-gray-100 rounded-lg bg-gray-50 md:flex-row md:space-x-8 md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700\">\r\n            <li>\r\n                <a href=\"/Home\" class={checkCurrentPage(\"Home\")}>Home</a>\r\n            </li>\r\n            <li>\r\n                <a href=\"/book_dropdown\" class={checkCurrentPage(\"book_dropdown\")}>Book</a>\r\n            </li>\r\n\r\n            {\r\n                (checker === \"Admin\" || checker === \"Staff\") && \r\n                <li>\r\n                    <a href=\"/approve\" class={checkCurrentPage(\"approve\")}>Approve</a>\r\n                </li>\r\n            }\r\n\r\n            {\r\n                (checker === \"Staff\") && \r\n                <li>\r\n                    <a href=\"/staff\" class={checkCurrentPage(\"staff\")}>Staff</a>\r\n                </li>\r\n            }\r\n\r\n            </ul>\r\n        </div>\r\n        </div>\r\n        </nav> \r\n        </div>  \r\n    )};","C:\\Orbital\\orbit\\rwfb\\src\\components\\Book\\book_form.js",["126"],[],"import Navbar from \"../../config/navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserAuthentication } from \"../../LoginContext\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { ErrorFormModal, SuccessFormModal} from \"./succform\";\r\n\r\nconst BookForm = () => {\r\n\r\n  /* choose the correct facility & its id\r\n  will be automatically set for them later, cannot change here */\r\n  const { setLocation, setFacility, Bookings, facilities, setBookings,\r\n    extractNameFromEmail, user } = UserAuthentication();\r\n\r\n  const hisName = extractNameFromEmail(user?.email)\r\n\r\n  // for successFormModal Modal handling\r\n  const [showModal, setShowModal] = useState(false);\r\n  // for errorFormModal Modal handling\r\n  const [Modal, setModal] = useState(false);\r\n  // store error message\r\n  const [errorMess,setErrorMess] = useState(\"\");\r\n\r\n  // start & end Time states\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [bookingDate, setBookingDate] = useState(\"\");\r\n\r\n  // context doesnt know the type so we need to specify\r\n  const facId = facilities.filter( (facility) => {\r\n    return facility.locationName === String(setLocation) &&\r\n     facility.Name === String(setFacility)\r\n  }).map(x => Number(x.facilityId));\r\n\r\n  /* handle form submission */\r\n  // go to book_form button click function \r\n  const navigate = useNavigate();\r\n\r\n  const submitForm = async (e) => {\r\n      try {\r\n\r\n          e.preventDefault();\r\n\r\n          /* FORM VALIDATION */\r\n\r\n          // function to check if booking time input has already been taken up\r\n          Bookings.map( (booking) => {\r\n\r\n          // checks if its the same facility id & Date\r\n          if(booking.facilityId === facId[0] && booking.date === bookingDate) {\r\n            // check to see if the time is taken up or not\r\n            if( \r\n            Number(booking.startTime.substring(0,2)) >=  Number(startTime.substring(0,2)) && \r\n            Number(booking.startTime.substring(3,5)) >= Number(startTime.substring(3,5)) &&  \r\n            Number(booking.endTime.substring(0,2)) <=  Number(endTime.substring(0,2)) && \r\n            Number(booking.endTime.substring(3,5)) <= Number(startTime.substring(3,5)) \r\n            ) {\r\n              // throw an error if timing has been taken up !\r\n              throw new Error('Venue has been booked for part of the time already!');\r\n            }\r\n          }\r\n\r\n          });\r\n\r\n          if(e.target.form.bookingTitle.value === \"\") throw new Error(\"The bookingTitle field is empty\");\r\n          else if(startTime === \"\") throw new Error(\"The startTime field is empty\");\r\n          else if (endTime === \"\") throw new Error(\"The endTime field is empty\");\r\n          else if (bookingDate === \"\") throw new Error(\"The bookingDate field is empty\");\r\n\r\n          /* END OF FORM VALIDATION */\r\n\r\n          // UPDATE ALL THE BOOKINGS\r\n          // get the data from the form itself - this is the only way that works\r\n          const currentBooking = \r\n          {\r\n            id:6, date:bookingDate, startTime:startTime, endTime:endTime, \r\n            status: \"pending\", bookingTitle:e.target.form.bookingTitle.value, facilityId:facId[0],\r\n            // hardcoded\r\n            studentId: 1,\r\n          }\r\n\r\n          // push the new Booking and update the state of Booking\r\n          setBookings([...Bookings,currentBooking]);\r\n\r\n          setShowModal(true);\r\n          \r\n\r\n      // if there are any errors in the form submission, display the errorModal\r\n      // console.log the error\r\n      } catch (e) {\r\n          setErrorMess(String(e));\r\n          setModal(true);\r\n      }\r\n      \r\n  }; \r\n\r\n  // update Bookings\r\n  useEffect( () => {\r\n  }, [Bookings]);\r\n  \r\n\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n    <div className='w-full h-[800px] bg-center bg-cover bg-utown'>\r\n    <div className='max-w-[600px] mx-auto my-16 p-4'>\r\n      <Navbar name={hisName} current={\"book_dropdown\"} />\r\n\r\n      <div class=\"flex items-center justify-center p-12\">\r\n      <form>        \r\n    \r\n      {/* Name section */}\r\n      <div class=\"-mx-3 flex flex-wrap\">\r\n\r\n        {/* First name */}\r\n        <div class=\"w-full px-3 sm:w-1/2\">\r\n          <div class=\"mb-5\">\r\n            <label\r\n              for=\"fName\"\r\n              class=\"mb-3 block text-base font-medium text-[#07074D]\"\r\n            >\r\n              First Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"fName\"\r\n              id=\"fName\"\r\n              placeholder=\"First Name\"\r\n              class=\"w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#B9261C] focus:shadow-md\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Last name name */}\r\n        <div class=\"w-full px-3 sm:w-1/2\">\r\n          <div class=\"mb-5\">\r\n            <label\r\n              for=\"bookingTitle\"\r\n              class=\"mb-3 block text-base font-medium text-[#07074D]\"\r\n            >\r\n              Booking Title\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"bookingTitle\"\r\n              id=\"bookingTitle\"\r\n              placeholder=\"Booking Title\" required\r\n              class=\"w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#B9261C] focus:shadow-md\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Total Number of Pax using */}\r\n      <div class=\"mb-5\">\r\n        <label\r\n          for=\"Pax\"\r\n          class=\"mb-3 block text-base font-medium text-[#07074D]\"\r\n        >\r\n          Total Number of Pax\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"Pax\"\r\n          id=\"Pax\"\r\n          min=\"0\"\r\n          placeholder=\"20\"\r\n          max=\"20\" required\r\n          class=\"w-full appearance-none rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#B9261C] focus:shadow-md\"\r\n        />\r\n      </div>\r\n\r\n      {/* Date */}\r\n        <div class=\"w-full sm:w-1/2\">\r\n          <div class=\"mb-5\">\r\n            <label\r\n              for=\"Dates\"\r\n              class=\"mb-3 block text-base font-medium text-[#07074D]\"\r\n            >\r\n              Date\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"Dates\"\r\n              min=\"2023-05-05\"\r\n              id=\"Dates\" required\r\n              onChange={(e) => setBookingDate(e.target.value)}\r\n              class=\"w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#B9261C] focus:shadow-md\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Time */}\r\n        <div class=\"-mx-3 flex flex-wrap\">\r\n          <div class=\"w-full px-3 sm:w-1/2\">\r\n            <label\r\n              for=\"StartTime\"\r\n              class=\"mb-3 block text-base font-medium text-[#07074D]\"\r\n            >\r\n              Start Time\r\n            </label>\r\n            <input\r\n              type=\"time\"\r\n              name=\"StartTime\"\r\n              step=\"1800\"\r\n              id=\"StartTime\"\r\n              min=\"08:00\" required\r\n              onChange={(e) => setStartTime(e.target.value)}\r\n              class=\"w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#B9261C] focus:shadow-md\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"w-full px-3 sm:w-1/2\">\r\n            <label\r\n              for=\"EndTime\"\r\n              class=\"mb-3 block text-base font-medium text-[#07074D]\"\r\n            >\r\n              End Time\r\n            </label>\r\n            <input\r\n              type=\"time\"\r\n              name=\"EndTime\"\r\n              step=\"1800\"\r\n              id=\"EndTime\"\r\n              min=\"08:00\" required\r\n              onChange={(e) => setEndTime(e.target.value)}\r\n              class=\"w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#B9261C] focus:shadow-md\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Location & Facility -> autofilled based on selected options */}\r\n        <div class=\"-mx-3 flex flex-wrap\">\r\n          <div class=\"w-full px-3 sm:w-1/2\">\r\n            <label\r\n              for=\"Location\"\r\n              class=\"mb-3 block text-base font-medium text-[#07074D]\"\r\n            >\r\n              Location\r\n            </label>\r\n            <input\r\n              type=\"Location\"\r\n              name=\"Location\"\r\n              id=\"Location\"\r\n              value={String(setLocation)}\r\n              class=\"w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#B9261C] focus:shadow-md\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"w-full px-3 sm:w-1/2\">\r\n            <label\r\n              for=\"Facility\"\r\n              class=\"mb-3 block text-base font-medium text-[#07074D]\"\r\n            >\r\n              Facility\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Facility\"\r\n              id=\"Facility\"\r\n              value={String(setFacility)}\r\n              class=\"w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#B9261C] focus:shadow-md\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n        <div class=\"px-3 py-5 flex flex-col items-center\">\r\n            <button onClick={submitForm} \r\n            class=\"inline-flex items-center h-10 px-5 block text-base font-medium text-red-100 transition-colors duration-150 bg-red-600 rounded-lg focus:shadow-outline hover:bg-red-800\"\r\n            >\r\n            Submit\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n\r\n    </div>\r\n    </div>\r\n    </div>\r\n\r\n    <SuccessFormModal isVisible={showModal} onClose={() => setShowModal(false)} \r\n        children={\r\n            <>\r\n            <div class=\"flex items-center justify-center w-full max-w-[600px] p-4 mb-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800\" role=\"alert\">\r\n              <div class=\"inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-green-500 bg-green-100 rounded-lg dark:bg-green-800 dark:text-green-200\">\r\n              <svg aria-hidden=\"true\" class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path></svg>\r\n              </div>\r\n\r\n              <div class=\"px-1 ml-1 text-m font-normal\">Booking submitted.</div>\r\n\r\n              <div class=\"px-3 py-5 flex flex-col items-center\">\r\n                <button onClick={() => {\r\n                  setShowModal(false);\r\n                  navigate('/book_dropdown');}\r\n                }\r\n                class=\"inline-flex items-center h-10 px-5 block text-base font-medium text-red-100 transition-colors duration-150 bg-red-600 rounded-lg focus:shadow-outline hover:bg-red-800\"\r\n                >\r\n                Book\r\n                </button>\r\n              </div>\r\n\r\n              <div class=\"px-3 py-5 flex flex-col items-center\">\r\n                <button onClick={() => {\r\n                  setShowModal(false);\r\n                  navigate('/Home');}\r\n                }\r\n                class=\"inline-flex items-center h-10 px-5 block text-base font-medium text-red-100 transition-colors duration-150 bg-red-600 rounded-lg focus:shadow-outline hover:bg-red-800\"\r\n                >\r\n                Home\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n            </>\r\n        }\r\n\r\n        />\r\n\r\n      <ErrorFormModal isVisible={Modal} onClose={() => setModal(false)} \r\n        children={\r\n            <>\r\n            <div class=\"flex items-center justify-center w-full max-w-[600px] p-4 mb-4 text-gray-500 bg-white rounded-lg shadow dark:text-gray-400 dark:bg-gray-800\" role=\"alert\">\r\n              <div class=\"inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-red-500 bg-red-100 rounded-lg dark:bg-red-800 dark:text-red-200\">\r\n              <svg aria-hidden=\"true\" class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"></path></svg>\r\n              <span class=\"sr-only\">Error icon</span>\r\n              </div>\r\n\r\n              <div class=\"px-1 ml-1 text-m font-normal\">{errorMess}</div>\r\n\r\n              <div class=\"px-3 py-5 flex flex-col items-center\">\r\n                <button onClick={() => {\r\n                  setShowModal(false);\r\n                  navigate('/Home');}\r\n                }\r\n                class=\"inline-flex items-center h-10 px-5 block text-base font-medium text-red-100 transition-colors duration-150 bg-red-600 rounded-lg focus:shadow-outline hover:bg-red-800\"\r\n                >\r\n                Home\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n            </>\r\n        }\r\n\r\n        />\r\n\r\n    </Fragment>\r\n  )\r\n}\r\nexport default BookForm;\r\n\r\n","C:\\Orbital\\orbit\\rwfb\\src\\components\\Book\\book_dropdown.js",["127","128"],[],"import React, { useState } from \"react\";\r\nimport { BiChevronDown } from \"react-icons/bi\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { UserAuthentication } from \"../../LoginContext\"\r\nimport Navbar from \"../../config/navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function BookDropdown() {\r\n\r\n    // setting of locations & facilities\r\n    const { setLocation, setSelectedLocation, setFacility, setSelectedFacility,\r\n        user, extractNameFromEmail} = UserAuthentication();\r\n\r\n    //button click function \r\n    const navigate = useNavigate();\r\n    const buttonClickHandle = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            navigate('/book_calendar');\r\n        } catch (e) {\r\n            alert(e);\r\n            navigate('/signup');\r\n        }\r\n        \r\n    }; \r\n\r\n    return (\r\n        <>\r\n        <Navbar current={\"book_dropdown\"}/>\r\n        <div className=\"w-full h-screen bg-center bg-cover bg-utown flex h-screen items-center justify-center\">\r\n            <SelectLocation setLocation={setLocation} setSelectedLocation={setSelectedLocation}/>\r\n            <SelectFacility setFacility={setFacility} setSelectedFacility={setSelectedFacility} setLocation={setLocation}/>\r\n            <button class=\"text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-4 py-2 text-center mr-3 md:mr-0 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\"\r\n            onClick={buttonClickHandle}>Check Venue Status</button> \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// dropdown to select the location eg: CAPT/TEMBU\r\nconst SelectLocation = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const { locations } = UserAuthentication();\r\n  \r\n    return (\r\n      <div className=\"mx-1 flex h-screen items-center justify-center\">\r\n          <div className=\"w-72 font-medium h-80\">\r\n              \r\n          {/* Selecting the Location */}\r\n  \r\n          {/* setOpen - checks if its clicked or not */}\r\n          <div\r\n              onClick={() => setOpen(!open)}\r\n              className=\"bg-white w-full p-2 flex items-center justify-between rounded text-gray-700\">\r\n              \r\n              {/* Shortens the Displayed result if its too long */}\r\n              {props.setLocation\r\n              ? props.setLocation?.length > 25\r\n                  ? props.setLocation?.substring(0, 25) + \"...\"\r\n                  : props.setLocation\r\n              : \"Select Location\"}\r\n  \r\n              {/* Selecting the Location's symbol */}\r\n              <BiChevronDown size={20} className={`${open && \"rotate-180\"}`} />\r\n          </div>\r\n  \r\n          <ul\r\n              className={`bg-white mt-2 overflow-y-auto ${\r\n              open ? \"max-h-60\" : \"max-h-0\"\r\n              } `}\r\n          >\r\n  \r\n              {/* Search Bar */}\r\n              <div className=\"flex items-center px-2 sticky top-0 bg-white\">\r\n              <AiOutlineSearch size={18} className=\"text-gray-700\" />\r\n  \r\n              <input\r\n                  type=\"text\"\r\n                  value={inputValue}\r\n                  onChange={(e) => setInputValue(e.target.value.toUpperCase())}\r\n                  placeholder=\"Enter location name\"\r\n                  className=\"placeholder:text-gray-700 p-2 outline-none\"\r\n              />\r\n              </div>\r\n  \r\n              {/* Displaying the input */}\r\n              {locations?.map((data) => (\r\n              <li\r\n                  key={data?.Name}\r\n                  className={`p-2 text-sm hover:bg-red-700 hover:text-white\r\n                  ${\r\n                  data?.Name?.toUpperCase() === props.setLocation?.toUpperCase() &&\r\n                  \"bg-red-700 text-white\"\r\n                  }\r\n                  ${\r\n                  data?.Name?.toUpperCase().startsWith(inputValue)\r\n                      ? \"block\"\r\n                      : \"hidden\"\r\n                  }`}\r\n                  onClick={() => {\r\n                  if (data?.Name?.toUpperCase() !== props.setLocation.toUpperCase()) {\r\n                      props.setSelectedLocation(data?.Name);\r\n                      setOpen(false);\r\n                      setInputValue(\"\");\r\n                  }\r\n                  }}\r\n              >\r\n                  {data?.Name}\r\n              </li>\r\n              ))}\r\n          </ul>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // dropdown to select the facility in that location\r\n  // select SR1 from selected location eg: CAPT\r\n  // facilities will be displayed based on location selected\r\n  const SelectFacility = (props) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const { facilities } = UserAuthentication();\r\n  \r\n    return (\r\n      <div className=\"px-1 flex h-screen items-center justify-center\">\r\n          <div className=\"w-72 font-medium h-80\">\r\n              \r\n          {/* Selecting the Facility */}\r\n  \r\n          {/* setOpen - checks if its clicked or not */}\r\n          <div\r\n              onClick={() => setOpen(!open)}\r\n              className=\"bg-white w-full p-2 flex items-center justify-between rounded text-gray-700\">\r\n              \r\n              {/* Shortens the Displayed result if its too long */}\r\n              {props.setFacility\r\n              ? props.setFacility?.length > 25\r\n                  ? props.setFacility?.substring(0, 25) + \"...\"\r\n                  : props.setFacility\r\n              : \"Select Facility\"}\r\n  \r\n              {/* Selecting the Facility's symbol */}\r\n              <BiChevronDown size={20} className={`${open && \"rotate-180\"}`} />\r\n          </div>\r\n  \r\n          <ul\r\n              className={`bg-white mt-2 overflow-y-auto ${\r\n              open ? \"max-h-60\" : \"max-h-0\"\r\n              } `}\r\n          >\r\n  \r\n              {/* Search Bar */}\r\n              <div className=\"flex items-center px-2 sticky top-0 bg-white\">\r\n              <AiOutlineSearch size={18} className=\"text-gray-700\" />\r\n  \r\n              <input\r\n                  type=\"text\"\r\n                  value={inputValue}\r\n                  onChange={(e) => setInputValue(e.target.value.toUpperCase())}\r\n                  placeholder=\"Enter Facility name\"\r\n                  className=\"placeholder:text-gray-700 p-2 outline-none\"\r\n              />\r\n              </div>\r\n  \r\n              {/* Displaying the input */}\r\n              {facilities?.filter(data => data.locationName === props.setLocation)\r\n              .map( (data) => (\r\n              <li\r\n                  key={data?.Name}\r\n                  className={`p-2 text-sm hover:bg-red-700 hover:text-white\r\n                  ${\r\n                  data?.Name?.toUpperCase() === props.setFacility?.toUpperCase() &&\r\n                  \"bg-red-700 text-white\"\r\n                  }\r\n                  ${\r\n                  data?.Name?.toUpperCase().startsWith(inputValue)\r\n                      ? \"block\"\r\n                      : \"hidden\"\r\n                  }`}\r\n                  onClick={() => {\r\n                  if (data?.Name?.toUpperCase() !== props.setLocation.toUpperCase()) {\r\n                      props.setSelectedFacility(data?.Name);\r\n                      setOpen(false);\r\n                      setInputValue(\"\");\r\n                  }\r\n                  }}\r\n              >\r\n                  {data?.Name}\r\n              </li>\r\n              ))\r\n              }\r\n          </ul>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n","C:\\Orbital\\orbit\\rwfb\\src\\components\\Book\\book_calendar.js",["129","130","131","132","133","134"],[],"import format from \"date-fns/format\";\r\nimport getDay from \"date-fns/getDay\";\r\nimport parse from \"date-fns/parse\";\r\nimport startOfWeek from \"date-fns/startOfWeek\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\r\n// style our big-calender\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"../../components/Book/bookCalender.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Navbar from \"../../config/navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserAuthentication } from \"../../LoginContext\";\r\nimport moment from \"moment\";\r\n\r\nconst locales = {\r\n    \"en-US\" : require(\"date-fns/locale/en-US\")\r\n}\r\n\r\n// to handle the localisation of the date formatting\r\nconst localizer = dateFnsLocalizer({\r\n    format,\r\n    parse,\r\n    startOfWeek,\r\n    getDay,\r\n    locales,\r\n});\r\n\r\n// array of events\r\nconst events = [];\r\n\r\nexport default function BookCalendar() {\r\n    // adding states\r\n    const { Bookings, setBookings, extractNameFromEmail, user } = UserAuthentication();\r\n\r\n\r\n    /* choose the correct facility & its id */\r\n    const { facilities, setLocation, setSelectedLocation,\r\n         setFacility, setSelectedFacility } = UserAuthentication();\r\n\r\n    // context doesnt know the type so we need to specify\r\n    const facId = facilities.filter( (facility) => {\r\n        return facility.locationName === String(setLocation) &&\r\n         facility.Name === String(setFacility)\r\n    }).map(x => Number(x.facilityId));\r\n\r\n    // facId[0] as facId is given as an array -\r\n    \r\n    // check if booking is already in events or not, NO REPEATS\r\n    // x is basically the id of the array\r\n    // so to access the event use events[x]\r\n    function containsBooking(temp, events) {\r\n        var x;\r\n        for (x in events) {\r\n            if (events[x].title === temp.title) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    // addings in bookings to events\r\n    useEffect(() => {\r\n    // map all bookings and add those that match that location \r\n    Bookings.map((booking) => {\r\n        \r\n        const temp = {\r\n            title: booking.bookingTitle,\r\n            start: moment(booking.date.concat(\"T\", booking.startTime)).toDate(),\r\n            end: moment(booking.date.concat(\"T\", booking.endTime)).toDate(),\r\n            data: {\r\n                type: booking.status,\r\n                id: booking.facilityId,\r\n            },\r\n        }\r\n        // check if there are any repeats\r\n        if (containsBooking(temp, events)) {\r\n        } else {\r\n            // check if the booking is for the correct facility and add it in\r\n            if(temp.data.id === facId[0]) {\r\n                events.push(temp);\r\n            }\r\n        }\r\n    });\r\n    });\r\n\r\n    // go to book_form button click function \r\n    const navigate = useNavigate();\r\n    const buttonClickHandle = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            navigate('/book_form');\r\n        } catch (e) {\r\n            alert(e);\r\n            navigate('/signup');\r\n        }\r\n        \r\n    }; \r\n\r\n    // go back button click function\r\n    const backClickHandle = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            navigate('/book_dropdown');\r\n        } catch (e) {\r\n            alert(e);\r\n            navigate('/signup');\r\n        }\r\n        \r\n    }; \r\n    \r\n    // components - aka change bg colour based on status of booking\r\n    const components = {\r\n        event: (props) => {\r\n            const eventType = String(props?.event?.data?.type);\r\n            console.log(eventType);\r\n    \r\n            switch(eventType) {\r\n                case \"approved\":\r\n                    return (\r\n                        <div style={{ border:\"1px\", background: \"green\", color: \"white\", height:'100%'}}>\r\n                            {props.title}\r\n                        </div>\r\n                    )\r\n                default:\r\n                    return (\r\n                        <div style={{ border:\"1px\", background: \"brown\", color: \"white\", height:'100%'}}>\r\n                            {props.title}\r\n                        </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='w-full h-screen bg-center bg-cover bg-utown'>\r\n        <div>\r\n            <Navbar name={extractNameFromEmail(user?.email)} current={\"book_dropdown\"}/>\r\n        </div>\r\n        <div class=\"flex items-center justify-center\">\r\n            <Calendar localizer={localizer} events={events} \r\n            startAccessor=\"start\" endAccessor=\"end\" style={{height:460 , width:900, margin: 80, background: \"white\"}} \r\n            components={components} views={[\"month\", \"week\", \"day\"]} />\r\n        </div>\r\n        <div class=\"flex items-center justify-center\">\r\n        <button class=\"mx-5 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-4 py-2 text-center mr-3 md:mr-0 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\"\r\n            onClick={backClickHandle}>\r\n                Go Back</button>\r\n\r\n        <button class=\"mx-5 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-4 py-2 text-center mr-3 md:mr-0 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800\"\r\n            onClick={buttonClickHandle}>\r\n                Book Venue</button>\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}","C:\\Orbital\\orbit\\rwfb\\src\\components\\Approve.js",["135","136","137","138","139","140","141"],[],"import { useState, useEffect } from 'react';\r\n\r\nimport { UserAuthentication } from '../LoginContext';\r\nimport Navbar from '../config/navbar';\r\n// tailwind css object file\r\nimport { tailw } from \"../config/styles\";\r\n\r\n\r\nconst Approve = () => {\r\n\r\n    // handling user navigation\r\n    const { Bookings, user, setBookings, forceUpdate} = UserAuthentication();\r\n\r\n    // tempState management for sorting\r\n    const [tempState, setTempState] = useState(Bookings);\r\n\r\n    // remove the @... from the email \r\n    function extractNameFromEmail(email) {\r\n        return email.split('@')[0];\r\n    }\r\n    let name = \"temp\"\r\n    try {\r\n        name = extractNameFromEmail(user?.email)\r\n    } catch {\r\n        console.log(\"failed extraction of name f\")\r\n    }\r\n    \r\n    // filter datas by users - show user booking\r\n    function filterByPending(data) {\r\n        return data?.status === \"pending\";\r\n    }\r\n\r\n    // once the Admin approves of the Booking\r\n    function onReview(bookingId) {\r\n        const t = Bookings.map( obj => {\r\n            if(Number(obj.id) === bookingId) {\r\n                return {...obj, status: \"approved\"};\r\n            }\r\n\r\n            return obj;\r\n\r\n        });\r\n        // update\r\n        setBookings([...t]);\r\n        setTempState([...t]);\r\n    }\r\n    \r\n    useEffect( () => {\r\n    }, [Bookings]);\r\n    useEffect( () => {\r\n    }, [tempState]);\r\n\r\n    const [datechecker,setdateChecker] = useState(false);\r\n    const [facilitychecker, setfacilityChecker] = useState(false);\r\n\r\n    // if admin wants to sort by date-ascending\r\n    const dateClickHandler = (e) => {\r\n        if(e.target.checked) {\r\n            setdateChecker(true);\r\n            // if facility sorting is not enabled        \r\n            setBookings([...Bookings].sort( (a,b) => {\r\n                if(b.date < a.date) {\r\n                    return 1;\r\n                } else if(b.date > a.date) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }));\r\n\r\n        } else {\r\n            setdateChecker(false);\r\n            setBookings(tempState);\r\n        }\r\n    }\r\n\r\n    // if admin wants to sort by location\r\n    const FacilityClickHandler = (e) => {\r\n        if(e.target.checked) {\r\n            setBookings([...Bookings].sort( (a,b) => {\r\n                if(b.facilityId < a.facilityId) {\r\n                    return 1;\r\n                } else if(b.facilityId > a.facilityId) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }));\r\n            \r\n        }\r\n    }\r\n\r\n    return(      \r\n        \r\n        <div className='w-full h-screen bg-center bg-cover bg-utown'>\r\n        <div className='max-w-[1000px] mx-auto my-16 p-4 '>\r\n        <Navbar name={name} current={\"approve\"}/>\r\n\r\n        {/* Approve Booking table*/}\r\n        <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\r\n        <table class=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n\r\n            <caption class=\"p-5 text-lg font-semibold text-left text-gray-900 bg-white dark:text-white dark:bg-gray-800\">\r\n                Pending Bookings\r\n                <p class=\"mt-1 text-sm font-normal text-gray-500 dark:text-gray-400\">Bookings for {name} to Review </p>\r\n            </caption>\r\n\r\n             {/* Sort Dropdown part*/}\r\n            <caption>\r\n                <ul class=\"p-2 space-y-1 text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-800 dark:text-gray-400\">\r\n                <li>\r\n                    <div class=\"flex p-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600\">\r\n                    <label class=\"relative inline-flex items-center w-full cursor-pointer\">\r\n                        <input onClick={dateClickHandler} type=\"checkbox\" value=\"\" class=\"sr-only peer\"/>\r\n                        <div class=\"w-9 h-5 bg-gray-200 rounded-full peer dark:bg-gray-600 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-500 peer-checked:bg-red-500\"></div>\r\n                        <span class=\"ml-3 text-sm font-medium text-gray-900 dark:text-gray-300\">Sort by Date</span>\r\n                    </label>\r\n                    </div>\r\n                </li>\r\n                <li>\r\n                    <div class=\"flex p-2 rounded hover:bg-gray-100 dark:hover:bg-gray-600\">\r\n                    <label class=\"relative inline-flex items-center w-full cursor-pointer\">\r\n                        <input onClick={FacilityClickHandler} type=\"checkbox\" value=\"\" class=\"sr-only peer\"/>\r\n                        <div class=\"w-9 h-5 bg-gray-200 rounded-full peer dark:bg-gray-600 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-500 peer-checked:bg-red-500\"></div>\r\n                        <span class=\"ml-3 text-sm font-medium text-gray-900 dark:text-gray-300\">Sort by Facility</span>\r\n                    </label>\r\n                    </div>\r\n                </li>\r\n                </ul>\r\n            </caption>\r\n        \r\n            <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    date\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    Title\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    facilityId\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    status\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                        <span class=\"sr-only\">Edit</span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {\r\n                    Bookings?.filter(data => filterByPending(data))\r\n                    ?.map(data => {\r\n                    return (\r\n                    <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n\r\n                        <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                            {data?.date}\r\n                        </th>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                            {data?.bookingTitle}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                            {data?.facilityId}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                        {data?.status == \"pending\" && <span class=\"inline-flex items-center bg-red-100 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-red-900 dark:text-red-300\">\r\n                            <span class=\"w-2 h-2 mr-1 bg-red-500 rounded-full\"></span>\r\n                            {data?.status}\r\n                        </span>}\r\n                        {data?.status == \"approved\" && <span class=\"inline-flex items-center bg-green-100 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-green-900 dark:text-green-300\">\r\n                            <span class=\"w-2 h-2 mr-1 bg-green-500 rounded-full\"></span>\r\n                            {data?.status}\r\n                        </span>}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4 text-right\">\r\n                            <button class=\"font-medium text-blue-600 dark:text-blue-500 hover:underline hover:dark:text-blue-300\"\r\n                            onClick={() => onReview(data?.id)}>\r\n                                Reviewed\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    )\r\n                })\r\n                }\r\n                \r\n            </tbody>\r\n\r\n        </table>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Approve;\r\n\r\n","C:\\Orbital\\orbit\\rwfb\\src\\components\\Staff.js",["142","143"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from \"../config/navbar\";\r\nimport { UserAuthentication } from '../LoginContext';\r\nimport { BiChevronDown } from \"react-icons/bi\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst UserStatusEditor = () => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [stud, setStud] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const { user, students } = UserAuthentication();\r\n\r\n    // remove the @... from the email \r\n    function extractNameFromEmail(email) {\r\n        return email.split('@')[0];\r\n    }\r\n    let name = \"temp\"\r\n    try {\r\n        name = extractNameFromEmail(user?.email);\r\n    } catch {\r\n        console.log(\"failed extraction of name f\")\r\n    }\r\n\r\n    return (\r\n        <div className='w-full h-[800px] bg-center bg-cover bg-utown'>\r\n        <Navbar name={name} current={\"staff\"}/>\r\n        \r\n        <div className=\"mx-1 flex h-screen items-center justify-center\">\r\n\r\n\r\n          {/* START OF SEARCH BAR */}\r\n          <div className=\"w-80 font-medium h-4/6\">\r\n              \r\n          {/* Selecting the Student */}\r\n  \r\n          {/* setOpen - checks if its clicked or not */}\r\n          <div\r\n              onClick={() => setOpen(!open)}\r\n              className=\"bg-white w-full p-2 flex items-center justify-between rounded text-gray-700\">\r\n\r\n              {stud ? stud : \"Select Student\"}\r\n  \r\n              {/* Selecting the Location's symbol */}\r\n              <BiChevronDown size={20} className={`${open && \"rotate-180\"}`} />\r\n          </div>\r\n  \r\n          <ul\r\n              className={`bg-white mt-2 overflow-y-auto ${\r\n              open ? \"max-h-60\" : \"max-h-0\"\r\n              } `}\r\n          >\r\n  \r\n              {/* Search Bar */}\r\n              <div className=\"flex items-center px-2 sticky top-0 bg-white\">\r\n              <AiOutlineSearch size={18} className=\"text-gray-700\" />\r\n  \r\n              <input\r\n                  type=\"text\"\r\n                  value={inputValue}\r\n                  onChange={(e) => setInputValue(e.target.value.toUpperCase())}\r\n                  placeholder=\"Enter Student Name\"\r\n                  className=\"placeholder:text-gray-700 p-2 outline-none\"\r\n              />\r\n              </div>\r\n\r\n              {/* Displaying the input */}\r\n              {students?.map((data) => (\r\n                <li\r\n                key={data?.Name}\r\n                className={`p-2 text-sm hover:bg-red-700 hover:text-white\r\n                ${\r\n                data?.Name?.toUpperCase() === stud?.toUpperCase() &&\r\n                \"bg-red-700 text-white\"\r\n                }\r\n                ${\r\n                data?.Name?.toUpperCase().startsWith(inputValue)\r\n                    ? \"block\"\r\n                    : \"hidden\"\r\n                }`}\r\n                onClick={() => {\r\n                if (data?.Name?.toUpperCase() !== stud.toUpperCase()) {\r\n                    setStud(data?.Name);\r\n                    setOpen(false);\r\n                    setInputValue(\"\");\r\n                }\r\n                }}\r\n            >\r\n                {data?.Name}\r\n            </li>\r\n              ))}\r\n\r\n          </ul>\r\n\r\n        </div>\r\n        {/* END OF SEARCH BAR */}\r\n\r\n        <SpecificDisplay selected={stud}/>        \r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserStatusEditor;\r\n\r\nexport function SpecificDisplay(props) {\r\n\r\n    const { setStudents, students } = UserAuthentication();\r\n\r\n    // change the tier of students once selected\r\n    const editTier = (studentId) => {\r\n        const t = students.map( obj => {\r\n\r\n            if(Number(obj.studentId) === studentId && String(obj.tier) === \"Admin\") {\r\n                return {...obj, tier:\"Student\"};\r\n            } else if(Number(obj.studentId) === studentId && String(obj.tier) === \"Student\") {\r\n                return {...obj, tier:\"Admin\"};\r\n            }\r\n\r\n            return obj;\r\n        });\r\n        // update tier of selected student\r\n        setStudents([...t]);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    },[students]);\r\n\r\n    return (\r\n        <div class=\"mx-6 overflow-x-auto shadow-md sm:rounded-lg h-4/6\">\r\n        <table class=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n\r\n            <caption class=\"p-5 text-lg font-semibold text-left text-gray-900 bg-white dark:text-white dark:bg-gray-800\">\r\n                All Student/Admin\r\n                <p class=\"mt-1 text-sm font-normal text-gray-500 dark:text-gray-400\">Browse a list display of the students & Admin</p>\r\n            </caption>\r\n\r\n            <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                <tr>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    Name\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    studentId\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                    tier\r\n                    </th>\r\n                    <th scope=\"col\" class=\"px-6 py-3\">\r\n                        <span class=\"sr-only\">Edit</span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {\r\n                    students\r\n                    ?.filter((data) => data?.Name.includes(props.selected) === true)\r\n                    ?.map(data => {\r\n                    return (\r\n                    <tr class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\r\n\r\n                        <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\">\r\n                            {data?.Name}\r\n                        </th>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                            {data?.studentId}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4\">\r\n                        {data?.tier == \"Student\" && <span class=\"inline-flex items-center bg-red-100 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-red-900 dark:text-red-300\">\r\n                            <span class=\"w-2 h-2 mr-1 bg-red-500 rounded-full\"></span>\r\n                            {data?.tier}\r\n                        </span>}\r\n                        {data?.tier == \"Admin\" && <span class=\"inline-flex items-center bg-green-100 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-lg dark:bg-green-900 dark:text-green-300\">\r\n                            <span class=\"w-2 h-2 mr-1 bg-green-500 rounded-lg\"></span>\r\n                            {data?.tier}\r\n                        </span>}\r\n                        </td>\r\n\r\n                        <td class=\"px-6 py-4 text-right\">\r\n                            <button onClick={() => editTier(data?.studentId)} class=\"font-medium text-blue-600 dark:text-blue-500 hover:underline hover:text-blue-300\">Edit</button>\r\n                        </td>\r\n                    </tr>\r\n                    )\r\n                })\r\n                }\r\n                \r\n            </tbody>\r\n\r\n        </table>\r\n        </div>\r\n         )\r\n} \r\n\r\n","C:\\Orbital\\orbit\\rwfb\\src\\components\\forgot_password.js",[],[],"C:\\Orbital\\orbit\\rwfb\\src\\components\\Book\\succform.js",[],[],{"ruleId":"144","severity":1,"message":"145","line":2,"column":27,"nodeType":"146","messageId":"147","endLine":2,"endColumn":33},{"ruleId":"144","severity":1,"message":"148","line":1,"column":58,"nodeType":"146","messageId":"147","endLine":1,"endColumn":68},{"ruleId":"144","severity":1,"message":"149","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":22,"column":25,"nodeType":"152","endLine":22,"endColumn":73},{"ruleId":"150","severity":1,"message":"151","line":27,"column":17,"nodeType":"152","endLine":27,"endColumn":65},{"ruleId":"144","severity":1,"message":"148","line":1,"column":31,"nodeType":"146","messageId":"147","endLine":1,"endColumn":41},{"ruleId":"144","severity":1,"message":"153","line":14,"column":13,"nodeType":"146","messageId":"147","endLine":14,"endColumn":21},{"ruleId":"144","severity":1,"message":"154","line":14,"column":23,"nodeType":"146","messageId":"147","endLine":14,"endColumn":34},{"ruleId":"144","severity":1,"message":"155","line":18,"column":12,"nodeType":"146","messageId":"147","endLine":18,"endColumn":17},{"ruleId":"144","severity":1,"message":"156","line":18,"column":19,"nodeType":"146","messageId":"147","endLine":18,"endColumn":27},{"ruleId":"144","severity":1,"message":"157","line":22,"column":14,"nodeType":"146","messageId":"147","endLine":22,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":52,"column":8,"nodeType":"160","endLine":52,"endColumn":10,"suggestions":"161"},{"ruleId":"144","severity":1,"message":"162","line":134,"column":13,"nodeType":"146","messageId":"147","endLine":134,"endColumn":17},{"ruleId":"144","severity":1,"message":"153","line":134,"column":19,"nodeType":"146","messageId":"147","endLine":134,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":229,"column":39,"nodeType":"165","messageId":"166","endLine":229,"endColumn":41},{"ruleId":"163","severity":1,"message":"164","line":233,"column":39,"nodeType":"165","messageId":"166","endLine":233,"endColumn":41},{"ruleId":"144","severity":1,"message":"162","line":9,"column":31,"nodeType":"146","messageId":"147","endLine":9,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":31,"column":31,"nodeType":"169","messageId":"170","endLine":31,"endColumn":33},{"ruleId":"167","severity":1,"message":"168","line":46,"column":35,"nodeType":"169","messageId":"170","endLine":46,"endColumn":37},{"ruleId":"144","severity":1,"message":"162","line":12,"column":9,"nodeType":"146","messageId":"147","endLine":12,"endColumn":13},{"ruleId":"144","severity":1,"message":"171","line":12,"column":15,"nodeType":"146","messageId":"147","endLine":12,"endColumn":35},{"ruleId":"144","severity":1,"message":"172","line":5,"column":28,"nodeType":"146","messageId":"147","endLine":5,"endColumn":36},{"ruleId":"144","severity":1,"message":"173","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":18},{"ruleId":"144","severity":1,"message":"154","line":35,"column":23,"nodeType":"146","messageId":"147","endLine":35,"endColumn":34},{"ruleId":"144","severity":1,"message":"174","line":39,"column":38,"nodeType":"146","messageId":"147","endLine":39,"endColumn":57},{"ruleId":"144","severity":1,"message":"175","line":40,"column":23,"nodeType":"146","messageId":"147","endLine":40,"endColumn":42},{"ruleId":"167","severity":1,"message":"168","line":67,"column":28,"nodeType":"169","messageId":"170","endLine":67,"endColumn":30},{"ruleId":"144","severity":1,"message":"176","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":15},{"ruleId":"144","severity":1,"message":"177","line":12,"column":42,"nodeType":"146","messageId":"147","endLine":12,"endColumn":53},{"ruleId":"144","severity":1,"message":"178","line":53,"column":12,"nodeType":"146","messageId":"147","endLine":53,"endColumn":23},{"ruleId":"144","severity":1,"message":"179","line":54,"column":12,"nodeType":"146","messageId":"147","endLine":54,"endColumn":27},{"ruleId":"144","severity":1,"message":"180","line":54,"column":29,"nodeType":"146","messageId":"147","endLine":54,"endColumn":47},{"ruleId":"163","severity":1,"message":"164","line":172,"column":39,"nodeType":"165","messageId":"166","endLine":172,"endColumn":41},{"ruleId":"163","severity":1,"message":"164","line":176,"column":39,"nodeType":"165","messageId":"166","endLine":176,"endColumn":41},{"ruleId":"163","severity":1,"message":"164","line":177,"column":37,"nodeType":"165","messageId":"166","endLine":177,"endColumn":39},{"ruleId":"163","severity":1,"message":"164","line":181,"column":37,"nodeType":"165","messageId":"166","endLine":181,"endColumn":39},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Bookings' is assigned a value but never used.","'setBookings' is assigned a value but never used.","'datas' is assigned a value but never used.","'setDatas' is assigned a value but never used.","'filterByUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bdatas'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'extractNameFromEmail' is assigned a value but never used.","'useState' is defined but never used.","'DatePicker' is defined but never used.","'setSelectedLocation' is assigned a value but never used.","'setSelectedFacility' is assigned a value but never used.","'tailw' is defined but never used.","'forceUpdate' is assigned a value but never used.","'datechecker' is assigned a value but never used.","'facilitychecker' is assigned a value but never used.","'setfacilityChecker' is assigned a value but never used.",{"desc":"182","fix":"183"},"Update the dependencies array to be: [bdatas]",{"range":"184","text":"185"},[1379,1381],"[bdatas]"]