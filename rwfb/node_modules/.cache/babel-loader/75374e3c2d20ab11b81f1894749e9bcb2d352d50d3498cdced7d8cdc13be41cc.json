{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramanen\\\\OneDrive\\\\Desktop\\\\Newfolder\\\\Orbital\\\\OrbitalPrep\\\\rwfb\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\n// react hooks\nimport { useState } from \"react\";\nimport { auth, googleProvider } from \"../config/firebase\";\n// importing methods from firebase authentication\nimport { createUserWithEmailAndPassword, signInWithPopup, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\n\n// Authentication Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  _s();\n  // setting states for email & password\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // createUser function \n  const signup = async e => {\n    e.preventDefault();\n    createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  // LoginUser function \n  const login = async () => {\n    alert(\"User logged in\");\n    await signInWithEmailAndPassword(auth, email, password);\n  };\n\n  // User Logout function\n  const logout = async () => {\n    alert(\"logged out\");\n    await signOut(auth);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email...\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Password...\",\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signup,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \" logout \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n// createUser function with gmail - FAILED \n/*\r\n<button onClick={signInWithGoogle}> Google Sign in </button>\r\nconst signInWithGoogle = async () => {\r\n    try {\r\n      signInWithPopup(auth, googleProvider);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n};\r\n*/\n_s(Signup, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","auth","googleProvider","createUserWithEmailAndPassword","signInWithPopup","signOut","signInWithEmailAndPassword","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","email","setEmail","password","setPassword","signup","e","preventDefault","login","alert","logout","children","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ramanen/OneDrive/Desktop/Newfolder/Orbital/OrbitalPrep/rwfb/src/components/Signup.js"],"sourcesContent":["// react hooks\r\nimport { useState } from \"react\";\r\n\r\nimport { auth, googleProvider } from \"../config/firebase\";\r\n// importing methods from firebase authentication\r\nimport { createUserWithEmailAndPassword, \r\nsignInWithPopup, signOut, signInWithEmailAndPassword} from \"firebase/auth\";\r\n\r\n// Authentication Component\r\nexport const Signup = () => {\r\n\r\n\r\n    // setting states for email & password\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // createUser function \r\n    const signup = async (e) => {\r\n        e.preventDefault();\r\n        createUserWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // LoginUser function \r\n    const login = async () => {\r\n        alert(\"User logged in\");\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // User Logout function\r\n    const logout = async () => {\r\n        alert(\"logged out\");\r\n        await signOut(auth);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <div>\r\n                <input \r\n                    placeholder=\"Email...\" \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                </div>\r\n\r\n                <div>\r\n                <input \r\n                    placeholder=\"Password...\" \r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                </div>\r\n\r\n                <button onClick={signup}>Sign up</button>\r\n\r\n                <button onClick={login}>Login</button>\r\n\r\n                <button onClick={logout}> logout </button>\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\n// createUser function with gmail - FAILED \r\n    /*\r\n    <button onClick={signInWithGoogle}> Google Sign in </button>\r\n    const signInWithGoogle = async () => {\r\n        try {\r\n          signInWithPopup(auth, googleProvider);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n    };\r\n*/\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,IAAI,EAAEC,cAAc,QAAQ,oBAAoB;AACzD;AACA,SAASC,8BAA8B,EACvCC,eAAe,EAAEC,OAAO,EAAEC,0BAA0B,QAAO,eAAe;;AAE1E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGxB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMiB,MAAM,GAAG,MAAOC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBhB,8BAA8B,CAACF,IAAI,EAAEY,KAAK,EAAEE,QAAQ,CAAC;EACzD,CAAC;;EAED;EACA,MAAMK,KAAK,GAAG,MAAAA,CAAA,KAAY;IACtBC,KAAK,CAAC,gBAAgB,CAAC;IACvB,MAAMf,0BAA0B,CAACL,IAAI,EAAEY,KAAK,EAAEE,QAAQ,CAAC;EAC3D,CAAC;;EAED;EACA,MAAMO,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvBD,KAAK,CAAC,YAAY,CAAC;IACnB,MAAMhB,OAAO,CAACJ,IAAI,CAAC;EACvB,CAAC;EAED,oBACIO,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACIf,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,eACAf,OAAA;UACIgB,WAAW,EAAC,UAAU;UACtBC,QAAQ,EAAGP,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACQ,MAAM,CAACC,KAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAENvB,OAAA;QAAAe,QAAA,eACAf,OAAA;UACIgB,WAAW,EAAC,aAAa;UACzBQ,IAAI,EAAC,UAAU;UACfP,QAAQ,EAAGP,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACQ,MAAM,CAACC,KAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAENvB,OAAA;QAAQyB,OAAO,EAAEhB,MAAO;QAAAM,QAAA,EAAC;MAAO;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEzCvB,OAAA;QAAQyB,OAAO,EAAEb,KAAM;QAAAG,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEtCvB,OAAA;QAAQyB,OAAO,EAAEX,MAAO;QAAAC,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC,gBACT,CAAC;AAEX,CAAC;;AAED;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATInB,EAAA,CAtDSD,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}