{"ast":null,"code":"var _jsxFileName = \"C:\\\\Orbital\\\\OrbitalPrep\\\\bookwebapp\\\\rwfb\\\\src\\\\LoginContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from \"./config/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\n\n// creating useContext Hook\nexport const LoginContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // user object \n  const [user, setUser] = useState({});\n  const createUser = (email, password) => {\n    return createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  // login firebase function\n  const login = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  // logout firebase function\n  const logout = () => {\n    return signOut(auth);\n  };\n\n  // updating user object when there is a state change to User \n  useEffect(() => {\n    const subscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n    return () => {\n      subscribe();\n    };\n  }, []);\n\n  // reset password when forgot password or just to reset\n  const resetPassword = email => {\n    return sendPasswordResetEmail(auth, email);\n  };\n  return (\n    /*#__PURE__*/\n    // pass down User object and signup,loginmlogout function as props\n    _jsxDEV(UserContext.Provider, {\n      value: {\n        user,\n        createUser,\n        login,\n        logout\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n// exporting the context out \n_s(LoginContextProvider, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n_c = LoginContextProvider;\nexport const UserAuthenication = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(UserAuthenication, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = UserAuthenication;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginContextProvider\");\n$RefreshReg$(_c2, \"UserAuthenication\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","auth","jsxDEV","_jsxDEV","UserContext","LoginContextProvider","_ref","_s","children","user","setUser","createUser","email","password","login","logout","subscribe","currentUser","resetPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","UserAuthenication","_s2","_c2","$RefreshReg$"],"sources":["C:/Orbital/OrbitalPrep/bookwebapp/rwfb/src/LoginContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword,\r\nsignOut, onAuthStateChanged, sendPasswordResetEmail } from \"firebase/auth\";\r\nimport { auth } from \"./config/firebase\";\r\n\r\nconst UserContext = createContext(null);\r\n\r\n// creating useContext Hook\r\nexport const LoginContextProvider = ({children}) => {\r\n    // user object \r\n    const [user, setUser] = useState({});\r\n\r\n    const createUser = (email, password) => {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // login firebase function\r\n    const login = (email, password) =>  {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    // logout firebase function\r\n    const logout = () => {\r\n        return signOut(auth);\r\n    }\r\n\r\n    // updating user object when there is a state change to User \r\n    useEffect(() => {\r\n        const subscribe = onAuthStateChanged(auth, (currentUser) => {\r\n          setUser(currentUser);\r\n        });\r\n        return () => {\r\n          subscribe();\r\n        };\r\n    }, []);\r\n\r\n    // reset password when forgot password or just to reset\r\n    const resetPassword = (email) => {\r\n        return sendPasswordResetEmail(auth,email);\r\n    }\r\n\r\n    return (\r\n        // pass down User object and signup,loginmlogout function as props\r\n        <UserContext.Provider value={{ user, createUser, login, logout }}>\r\n            { children }\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\n// exporting the context out \r\nexport const UserAuthenication = () => {\r\n    return useContext(UserContext);\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,8BAA8B,EAAEC,0BAA0B,EACnEC,OAAO,EAAEC,kBAAkB,EAAEC,sBAAsB,QAAQ,eAAe;AAC1E,SAASC,IAAI,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,gBAAGZ,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA,OAAO,MAAMa,oBAAoB,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC3C;EACA,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMgB,UAAU,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACpC,OAAOjB,8BAA8B,CAACK,IAAI,EAAEW,KAAK,EAAEC,QAAQ,CAAC;EAChE,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGA,CAACF,KAAK,EAAEC,QAAQ,KAAM;IAChC,OAAOhB,0BAA0B,CAACI,IAAI,EAAEW,KAAK,EAAEC,QAAQ,CAAC;EAC5D,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACjB,OAAOjB,OAAO,CAACG,IAAI,CAAC;EACxB,CAAC;;EAED;EACAP,SAAS,CAAC,MAAM;IACZ,MAAMsB,SAAS,GAAGjB,kBAAkB,CAACE,IAAI,EAAGgB,WAAW,IAAK;MAC1DP,OAAO,CAACO,WAAW,CAAC;IACtB,CAAC,CAAC;IACF,OAAO,MAAM;MACXD,SAAS,CAAC,CAAC;IACb,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,aAAa,GAAIN,KAAK,IAAK;IAC7B,OAAOZ,sBAAsB,CAACC,IAAI,EAACW,KAAK,CAAC;EAC7C,CAAC;EAED;IAAA;IACI;IACAT,OAAA,CAACC,WAAW,CAACe,QAAQ;MAACC,KAAK,EAAE;QAAEX,IAAI;QAAEE,UAAU;QAAEG,KAAK;QAAEC;MAAO,CAAE;MAAAP,QAAA,EAC3DA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;AAE/B,CAAC;;AAED;AAAAjB,EAAA,CAzCaF,oBAAoB;AAAAoB,EAAA,GAApBpB,oBAAoB;AA0CjC,OAAO,MAAMqB,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,OAAOlC,UAAU,CAACW,WAAW,CAAC;AAClC,CAAC;AAAAuB,GAAA,CAFYD,iBAAiB;AAAAE,GAAA,GAAjBF,iBAAiB;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}