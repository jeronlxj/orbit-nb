{"ast":null,"code":"import _slicedToArray from\"C:/Orbital/orbit/rwfb/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useContext,useEffect,useState}from'react';import{createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut,onAuthStateChanged,sendPasswordResetEmail}from\"firebase/auth\";import{auth}from\"./config/firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";var UserContext=/*#__PURE__*/createContext(null);// creating useContext Hook\nexport var LoginContextProvider=function LoginContextProvider(_ref){var children=_ref.children;// user object \nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var createUser=function createUser(email,password){return createUserWithEmailAndPassword(auth,email,password);};// login firebase function\nvar login=function login(email,password){return signInWithEmailAndPassword(auth,email,password);};// logout firebase function\nvar logout=function logout(){return signOut(auth);};// updating user object when there is a state change to User \nuseEffect(function(){var subscribe=onAuthStateChanged(auth,function(currentUser){setUser(currentUser);});return function(){subscribe();};},[]);// reset password when forgot password or just to reset\nvar resetPassword=function resetPassword(email){return sendPasswordResetEmail(auth,email);};// make the props passed to all children neater \nvar loginContextValue={user:user,createUser:createUser,login:login,logout:logout,resetPassword:resetPassword};return/*#__PURE__*/ (// pass down User object and signup,loginmlogout function as props\n_jsx(UserContext.Provider,{value:loginContextValue,children:children}));};// exporting the context out \nexport var UserAuthenication=function UserAuthenication(){return useContext(UserContext);};","map":{"version":3,"names":["createContext","useContext","useEffect","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","auth","jsx","_jsx","UserContext","LoginContextProvider","_ref","children","_useState","_useState2","_slicedToArray","user","setUser","createUser","email","password","login","logout","subscribe","currentUser","resetPassword","loginContextValue","Provider","value","UserAuthenication"],"sources":["C:/Orbital/orbit/rwfb/src/LoginContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword,\r\nsignOut, onAuthStateChanged, sendPasswordResetEmail } from \"firebase/auth\";\r\nimport { auth } from \"./config/firebase\";\r\n\r\nconst UserContext = createContext(null);\r\n\r\n// creating useContext Hook\r\nexport const LoginContextProvider = ({children}) => {\r\n    // user object \r\n    const [user, setUser] = useState({});\r\n\r\n    const createUser = (email, password) => {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // login firebase function\r\n    const login = (email, password) =>  {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    // logout firebase function\r\n    const logout = () => {\r\n        return signOut(auth);\r\n    }\r\n\r\n    // updating user object when there is a state change to User \r\n    useEffect(() => {\r\n        const subscribe = onAuthStateChanged(auth, (currentUser) => {\r\n          setUser(currentUser);\r\n        });\r\n        return () => {\r\n          subscribe();\r\n        };\r\n    }, []);\r\n\r\n    // reset password when forgot password or just to reset\r\n    const resetPassword = (email) => {\r\n        return sendPasswordResetEmail(auth,email);\r\n    }\r\n\r\n    // make the props passed to all children neater \r\n    const loginContextValue = {user, createUser, login, logout, resetPassword};\r\n\r\n    return (\r\n        // pass down User object and signup,loginmlogout function as props\r\n        <UserContext.Provider value={loginContextValue}>\r\n            { children }\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\n// exporting the context out \r\nexport const UserAuthenication = () => {\r\n    return useContext(UserContext);\r\n}"],"mappings":"2GAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACtE,OAASC,8BAA8B,CAAEC,0BAA0B,CACnEC,OAAO,CAAEC,kBAAkB,CAAEC,sBAAsB,KAAQ,eAAe,CAC1E,OAASC,IAAI,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzC,GAAM,CAAAC,WAAW,cAAGZ,aAAa,CAAC,IAAI,CAAC,CAEvC;AACA,MAAO,IAAM,CAAAa,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAAC,IAAA,CAAmB,IAAd,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAC1C;AACA,IAAAC,SAAA,CAAwBb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpB,GAAM,CAAAI,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CACpC,MAAO,CAAAnB,8BAA8B,CAACK,IAAI,CAAEa,KAAK,CAAEC,QAAQ,CAAC,CAChE,CAAC,CAED;AACA,GAAM,CAAAC,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAIF,KAAK,CAAEC,QAAQ,CAAM,CAChC,MAAO,CAAAlB,0BAA0B,CAACI,IAAI,CAAEa,KAAK,CAAEC,QAAQ,CAAC,CAC5D,CAAC,CAED;AACA,GAAM,CAAAE,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,CACjB,MAAO,CAAAnB,OAAO,CAACG,IAAI,CAAC,CACxB,CAAC,CAED;AACAP,SAAS,CAAC,UAAM,CACZ,GAAM,CAAAwB,SAAS,CAAGnB,kBAAkB,CAACE,IAAI,CAAE,SAACkB,WAAW,CAAK,CAC1DP,OAAO,CAACO,WAAW,CAAC,CACtB,CAAC,CAAC,CACF,MAAO,WAAM,CACXD,SAAS,CAAC,CAAC,CACb,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,GAAM,CAAAE,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIN,KAAK,CAAK,CAC7B,MAAO,CAAAd,sBAAsB,CAACC,IAAI,CAACa,KAAK,CAAC,CAC7C,CAAC,CAED;AACA,GAAM,CAAAO,iBAAiB,CAAG,CAACV,IAAI,CAAJA,IAAI,CAAEE,UAAU,CAAVA,UAAU,CAAEG,KAAK,CAALA,KAAK,CAAEC,MAAM,CAANA,MAAM,CAAEG,aAAa,CAAbA,aAAa,CAAC,CAE1E,oBACI;AACAjB,IAAA,CAACC,WAAW,CAACkB,QAAQ,EAACC,KAAK,CAAEF,iBAAkB,CAAAd,QAAA,CACzCA,QAAQ,CACQ,CAAC,EAE/B,CAAC,CAED;AACA,MAAO,IAAM,CAAAiB,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CACnC,MAAO,CAAA/B,UAAU,CAACW,WAAW,CAAC,CAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}