{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ramanen\\\\OneDrive\\\\Desktop\\\\Newfolder\\\\Orbital\\\\OrbitalPrep\\\\rwfb\\\\src\\\\components\\\\auth.js\",\n  _s = $RefreshSig$();\n// react hooks\nimport { useState } from \"react\";\nimport { auth, googleProvider } from \"../config/firebase\";\n// importing methods from firebase authentication\nimport { createUserWithEmailAndPassword, signInWithPopup, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Maindisplay } from \"./components/maindisplay\";\n\n// Authentication Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Auth = () => {\n  _s();\n  // navigate to main page once signed up\n  const navigate = useNavigate();\n  const navigateMain = () => {\n    navigate(\"/main\");\n  };\n\n  // setting states for email & password\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // createUser function \n  const signup = async () => {\n    await createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  // LoginUser function \n  const login = async () => {\n    alert(\"User logged in\");\n    await signInWithEmailAndPassword(auth, email, password);\n  };\n\n  // User Logout function\n  const logout = async () => {\n    alert(\"logged out\");\n    await signOut(auth);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email...\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password...\",\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signup,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \" logout \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n// createUser function with gmail - FAILED \n/*\r\n<button onClick={signInWithGoogle}> Google Sign in </button>\r\nconst signInWithGoogle = async () => {\r\n    try {\r\n      signInWithPopup(auth, googleProvider);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n};\r\n*/\n_s(Auth, \"H+iueE6ppXbrBS3eFHdSUQUe0Ps=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["useState","auth","googleProvider","createUserWithEmailAndPassword","signInWithPopup","signOut","signInWithEmailAndPassword","useNavigate","Maindisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","_s","navigate","navigateMain","email","setEmail","password","setPassword","signup","login","alert","logout","children","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ramanen/OneDrive/Desktop/Newfolder/Orbital/OrbitalPrep/rwfb/src/components/auth.js"],"sourcesContent":["// react hooks\r\nimport { useState } from \"react\";\r\n\r\nimport { auth, googleProvider } from \"../config/firebase\";\r\n// importing methods from firebase authentication\r\nimport { createUserWithEmailAndPassword, \r\nsignInWithPopup, signOut, signInWithEmailAndPassword} from \"firebase/auth\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Maindisplay } from \"./components/maindisplay\";\r\n\r\n\r\n// Authentication Component\r\nexport const Auth = () => {\r\n\r\n    // navigate to main page once signed up\r\n    const navigate = useNavigate();\r\n\r\n    const navigateMain = () => {\r\n      navigate(\"/main\");\r\n    }\r\n\r\n    // setting states for email & password\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // createUser function \r\n    const signup = async () => {\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // LoginUser function \r\n    const login = async () => {\r\n        alert(\"User logged in\");\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // User Logout function\r\n    const logout = async () => {\r\n        alert(\"logged out\");\r\n        await signOut(auth);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form>\r\n                <input \r\n                    placeholder=\"Email...\" \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input \r\n                    placeholder=\"Password...\" \r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n\r\n                <button onClick={signup}>Sign up</button>\r\n\r\n                <button onClick={login}>Login</button>\r\n\r\n                <button onClick={logout}> logout </button>\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\n// createUser function with gmail - FAILED \r\n    /*\r\n    <button onClick={signInWithGoogle}> Google Sign in </button>\r\n    const signInWithGoogle = async () => {\r\n        try {\r\n          signInWithPopup(auth, googleProvider);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n    };\r\n    */"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,IAAI,EAAEC,cAAc,QAAQ,oBAAoB;AACzD;AACA,SAASC,8BAA8B,EACvCC,eAAe,EAAEC,OAAO,EAAEC,0BAA0B,QAAO,eAAe;AAE1E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,0BAA0B;;AAGtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB;EACA,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBD,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC;;EAED;EACA,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMqB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAMlB,8BAA8B,CAACF,IAAI,EAAEgB,KAAK,EAAEE,QAAQ,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMG,KAAK,GAAG,MAAAA,CAAA,KAAY;IACtBC,KAAK,CAAC,gBAAgB,CAAC;IACvB,MAAMjB,0BAA0B,CAACL,IAAI,EAAEgB,KAAK,EAAEE,QAAQ,CAAC;EAC3D,CAAC;;EAED;EACA,MAAMK,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvBD,KAAK,CAAC,YAAY,CAAC;IACnB,MAAMlB,OAAO,CAACJ,IAAI,CAAC;EACvB,CAAC;EAED,oBACIS,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACIf,OAAA;MAAAe,QAAA,gBACIf,OAAA;QACIgB,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAGC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFxB,OAAA;QACIgB,WAAW,EAAC,aAAa;QACzBS,IAAI,EAAC,UAAU;QACfR,QAAQ,EAAGC,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eAEFxB,OAAA;QAAQ0B,OAAO,EAAEf,MAAO;QAAAI,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEzCxB,OAAA;QAAQ0B,OAAO,EAAEd,KAAM;QAAAG,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEtCxB,OAAA;QAAQ0B,OAAO,EAAEZ,MAAO;QAAAC,QAAA,EAAC;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC,gBACT,CAAC;AAEX,CAAC;;AAED;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATIpB,EAAA,CAtDSD,IAAI;EAAA,QAGIN,WAAW;AAAA;AAAA8B,EAAA,GAHnBxB,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}